/**
* Barcodable.com API
* Barcodable.com API
*
* The version of the OpenAPI document: 1.5.0
* Contact: support@barcodable.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Inline_response_200.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Inline_response_200::Inline_response_200()
{
    m_UpcsIsSet = false;
    m_EansIsSet = false;
    m_AsinsIsSet = false;
    m_Message = "";
    m_MessageIsSet = false;
    
}

Inline_response_200::~Inline_response_200()
{
}

void Inline_response_200::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const Inline_response_200& o)
{
    j = nlohmann::json();
    if(o.upcsIsSet() || !o.m_Upcs.empty())
        j["upcs"] = o.m_Upcs;
    if(o.eansIsSet() || !o.m_Eans.empty())
        j["eans"] = o.m_Eans;
    if(o.asinsIsSet() || !o.m_Asins.empty())
        j["asins"] = o.m_Asins;
    if(o.messageIsSet())
        j["message"] = o.m_Message;
}

void from_json(const nlohmann::json& j, Inline_response_200& o)
{
    if(j.find("upcs") != j.end())
    {
        j.at("upcs").get_to(o.m_Upcs);
        o.m_UpcsIsSet = true;
    } 
    if(j.find("eans") != j.end())
    {
        j.at("eans").get_to(o.m_Eans);
        o.m_EansIsSet = true;
    } 
    if(j.find("asins") != j.end())
    {
        j.at("asins").get_to(o.m_Asins);
        o.m_AsinsIsSet = true;
    } 
    if(j.find("message") != j.end())
    {
        j.at("message").get_to(o.m_Message);
        o.m_MessageIsSet = true;
    } 
}

std::vector<std::string>& Inline_response_200::getUpcs()
{
    return m_Upcs;
}
void Inline_response_200::setUpcs(std::vector<std::string> const& value)
{
    m_Upcs = value;
    m_UpcsIsSet = true;
}
bool Inline_response_200::upcsIsSet() const
{
    return m_UpcsIsSet;
}
void Inline_response_200::unsetUpcs()
{
    m_UpcsIsSet = false;
}
std::vector<std::string>& Inline_response_200::getEans()
{
    return m_Eans;
}
void Inline_response_200::setEans(std::vector<std::string> const& value)
{
    m_Eans = value;
    m_EansIsSet = true;
}
bool Inline_response_200::eansIsSet() const
{
    return m_EansIsSet;
}
void Inline_response_200::unsetEans()
{
    m_EansIsSet = false;
}
std::vector<std::string>& Inline_response_200::getAsins()
{
    return m_Asins;
}
void Inline_response_200::setAsins(std::vector<std::string> const& value)
{
    m_Asins = value;
    m_AsinsIsSet = true;
}
bool Inline_response_200::asinsIsSet() const
{
    return m_AsinsIsSet;
}
void Inline_response_200::unsetAsins()
{
    m_AsinsIsSet = false;
}
std::string Inline_response_200::getMessage() const
{
    return m_Message;
}
void Inline_response_200::setMessage(std::string const& value)
{
    m_Message = value;
    m_MessageIsSet = true;
}
bool Inline_response_200::messageIsSet() const
{
    return m_MessageIsSet;
}
void Inline_response_200::unsetMessage()
{
    m_MessageIsSet = false;
}

}
}
}
}

