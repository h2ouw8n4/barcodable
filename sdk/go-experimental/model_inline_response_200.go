/*
 * Barcodable.com API
 *
 * Barcodable.com API
 *
 * API version: 1.5.0
 * Contact: support@barcodable.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// InlineResponse200 struct for InlineResponse200
type InlineResponse200 struct {
	// A list of UPCs
	Upcs *[]string `json:"upcs,omitempty"`
	// A list of EANs
	Eans *[]string `json:"eans,omitempty"`
	// A list of ASINs
	Asins *[]string `json:"asins,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewInlineResponse200 instantiates a new InlineResponse200 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// NewInlineResponse200WithDefaults instantiates a new InlineResponse200 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200WithDefaults() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// GetUpcs returns the Upcs field value if set, zero value otherwise.
func (o *InlineResponse200) GetUpcs() []string {
	if o == nil || o.Upcs == nil {
		var ret []string
		return ret
	}
	return *o.Upcs
}

// GetUpcsOk returns a tuple with the Upcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetUpcsOk() (*[]string, bool) {
	if o == nil || o.Upcs == nil {
		return nil, false
	}
	return o.Upcs, true
}

// HasUpcs returns a boolean if a field has been set.
func (o *InlineResponse200) HasUpcs() bool {
	if o != nil && o.Upcs != nil {
		return true
	}

	return false
}

// SetUpcs gets a reference to the given []string and assigns it to the Upcs field.
func (o *InlineResponse200) SetUpcs(v []string) {
	o.Upcs = &v
}

// GetEans returns the Eans field value if set, zero value otherwise.
func (o *InlineResponse200) GetEans() []string {
	if o == nil || o.Eans == nil {
		var ret []string
		return ret
	}
	return *o.Eans
}

// GetEansOk returns a tuple with the Eans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetEansOk() (*[]string, bool) {
	if o == nil || o.Eans == nil {
		return nil, false
	}
	return o.Eans, true
}

// HasEans returns a boolean if a field has been set.
func (o *InlineResponse200) HasEans() bool {
	if o != nil && o.Eans != nil {
		return true
	}

	return false
}

// SetEans gets a reference to the given []string and assigns it to the Eans field.
func (o *InlineResponse200) SetEans(v []string) {
	o.Eans = &v
}

// GetAsins returns the Asins field value if set, zero value otherwise.
func (o *InlineResponse200) GetAsins() []string {
	if o == nil || o.Asins == nil {
		var ret []string
		return ret
	}
	return *o.Asins
}

// GetAsinsOk returns a tuple with the Asins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetAsinsOk() (*[]string, bool) {
	if o == nil || o.Asins == nil {
		return nil, false
	}
	return o.Asins, true
}

// HasAsins returns a boolean if a field has been set.
func (o *InlineResponse200) HasAsins() bool {
	if o != nil && o.Asins != nil {
		return true
	}

	return false
}

// SetAsins gets a reference to the given []string and assigns it to the Asins field.
func (o *InlineResponse200) SetAsins(v []string) {
	o.Asins = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *InlineResponse200) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *InlineResponse200) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *InlineResponse200) SetMessage(v string) {
	o.Message = &v
}

func (o InlineResponse200) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Upcs != nil {
		toSerialize["upcs"] = o.Upcs
	}
	if o.Eans != nil {
		toSerialize["eans"] = o.Eans
	}
	if o.Asins != nil {
		toSerialize["asins"] = o.Asins
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200 struct {
	value *InlineResponse200
	isSet bool
}

func (v NullableInlineResponse200) Get() *InlineResponse200 {
	return v.value
}

func (v *NullableInlineResponse200) Set(val *InlineResponse200) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200(val *InlineResponse200) *NullableInlineResponse200 {
	return &NullableInlineResponse200{value: val, isSet: true}
}

func (v NullableInlineResponse200) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
