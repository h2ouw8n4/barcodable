/*
 * Barcodable.com API
 *
 * Barcodable.com API
 *
 * API version: 1.5.0
 * Contact: support@barcodable.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
)

// Item struct for Item
type Item struct {
	Upc *string `json:"upc,omitempty"`
	Ean *string `json:"ean,omitempty"`
	Isbn *string `json:"isbn,omitempty"`
	Asin *string `json:"asin,omitempty"`
	Title *string `json:"title,omitempty"`
	Sku *string `json:"sku,omitempty"`
	Mpn *string `json:"mpn,omitempty"`
	PartNumber *string `json:"part_number,omitempty"`
	// A list of matching upc codes.
	Upcs *[]string `json:"upcs,omitempty"`
	Description *string `json:"description,omitempty"`
	Brand *string `json:"brand,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty"`
	Color *string `json:"color,omitempty"`
	NewPrice *float32 `json:"new_price,omitempty"`
	UsedPrice *float32 `json:"used_price,omitempty"`
	CurrencyCode *string `json:"currency_code,omitempty"`
	Url *string `json:"url,omitempty"`
	// A list of product feature descriptions.
	Features *[]string `json:"features,omitempty"`
	// Product dimensions and weight.  ('meters', 'centimeters', 'millimeters', 'inches', 'feet', 'yards', 'ounces', 'pounds', 'grams', 'milligrams', 'kilograms')
	Dimensions *[]map[string]interface{} `json:"dimensions,omitempty"`
	// A list product images.
	Images *[]string `json:"images,omitempty"`
	// Matched items for this product.
	MatchedItems *[]map[string]interface{} `json:"matched_items,omitempty"`
	// A list of country codes from which this item belongs.
	IsoCountryCodes *[]string `json:"iso_country_codes,omitempty"`
	// The company name registered to the product's UPC or EAN.
	CompanyName *string `json:"company_name,omitempty"`
	// The company address registered to the product's UPC or EAN.
	CompanyAddress *string `json:"company_address,omitempty"`
	// A list of categories for this product.
	Categories *[]string `json:"categories,omitempty"`
	// A list of category hierarchies for this product. Categories are listed in order of generic category to most specific category.
	CategoryHierarchies *[]string `json:"category_hierarchies,omitempty"`
}

// NewItem instantiates a new Item object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItem() *Item {
	this := Item{}
	return &this
}

// NewItemWithDefaults instantiates a new Item object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemWithDefaults() *Item {
	this := Item{}
	return &this
}

// GetUpc returns the Upc field value if set, zero value otherwise.
func (o *Item) GetUpc() string {
	if o == nil || o.Upc == nil {
		var ret string
		return ret
	}
	return *o.Upc
}

// GetUpcOk returns a tuple with the Upc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetUpcOk() (*string, bool) {
	if o == nil || o.Upc == nil {
		return nil, false
	}
	return o.Upc, true
}

// HasUpc returns a boolean if a field has been set.
func (o *Item) HasUpc() bool {
	if o != nil && o.Upc != nil {
		return true
	}

	return false
}

// SetUpc gets a reference to the given string and assigns it to the Upc field.
func (o *Item) SetUpc(v string) {
	o.Upc = &v
}

// GetEan returns the Ean field value if set, zero value otherwise.
func (o *Item) GetEan() string {
	if o == nil || o.Ean == nil {
		var ret string
		return ret
	}
	return *o.Ean
}

// GetEanOk returns a tuple with the Ean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetEanOk() (*string, bool) {
	if o == nil || o.Ean == nil {
		return nil, false
	}
	return o.Ean, true
}

// HasEan returns a boolean if a field has been set.
func (o *Item) HasEan() bool {
	if o != nil && o.Ean != nil {
		return true
	}

	return false
}

// SetEan gets a reference to the given string and assigns it to the Ean field.
func (o *Item) SetEan(v string) {
	o.Ean = &v
}

// GetIsbn returns the Isbn field value if set, zero value otherwise.
func (o *Item) GetIsbn() string {
	if o == nil || o.Isbn == nil {
		var ret string
		return ret
	}
	return *o.Isbn
}

// GetIsbnOk returns a tuple with the Isbn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetIsbnOk() (*string, bool) {
	if o == nil || o.Isbn == nil {
		return nil, false
	}
	return o.Isbn, true
}

// HasIsbn returns a boolean if a field has been set.
func (o *Item) HasIsbn() bool {
	if o != nil && o.Isbn != nil {
		return true
	}

	return false
}

// SetIsbn gets a reference to the given string and assigns it to the Isbn field.
func (o *Item) SetIsbn(v string) {
	o.Isbn = &v
}

// GetAsin returns the Asin field value if set, zero value otherwise.
func (o *Item) GetAsin() string {
	if o == nil || o.Asin == nil {
		var ret string
		return ret
	}
	return *o.Asin
}

// GetAsinOk returns a tuple with the Asin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetAsinOk() (*string, bool) {
	if o == nil || o.Asin == nil {
		return nil, false
	}
	return o.Asin, true
}

// HasAsin returns a boolean if a field has been set.
func (o *Item) HasAsin() bool {
	if o != nil && o.Asin != nil {
		return true
	}

	return false
}

// SetAsin gets a reference to the given string and assigns it to the Asin field.
func (o *Item) SetAsin(v string) {
	o.Asin = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Item) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Item) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Item) SetTitle(v string) {
	o.Title = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *Item) GetSku() string {
	if o == nil || o.Sku == nil {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetSkuOk() (*string, bool) {
	if o == nil || o.Sku == nil {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *Item) HasSku() bool {
	if o != nil && o.Sku != nil {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *Item) SetSku(v string) {
	o.Sku = &v
}

// GetMpn returns the Mpn field value if set, zero value otherwise.
func (o *Item) GetMpn() string {
	if o == nil || o.Mpn == nil {
		var ret string
		return ret
	}
	return *o.Mpn
}

// GetMpnOk returns a tuple with the Mpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetMpnOk() (*string, bool) {
	if o == nil || o.Mpn == nil {
		return nil, false
	}
	return o.Mpn, true
}

// HasMpn returns a boolean if a field has been set.
func (o *Item) HasMpn() bool {
	if o != nil && o.Mpn != nil {
		return true
	}

	return false
}

// SetMpn gets a reference to the given string and assigns it to the Mpn field.
func (o *Item) SetMpn(v string) {
	o.Mpn = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *Item) GetPartNumber() string {
	if o == nil || o.PartNumber == nil {
		var ret string
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetPartNumberOk() (*string, bool) {
	if o == nil || o.PartNumber == nil {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *Item) HasPartNumber() bool {
	if o != nil && o.PartNumber != nil {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given string and assigns it to the PartNumber field.
func (o *Item) SetPartNumber(v string) {
	o.PartNumber = &v
}

// GetUpcs returns the Upcs field value if set, zero value otherwise.
func (o *Item) GetUpcs() []string {
	if o == nil || o.Upcs == nil {
		var ret []string
		return ret
	}
	return *o.Upcs
}

// GetUpcsOk returns a tuple with the Upcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetUpcsOk() (*[]string, bool) {
	if o == nil || o.Upcs == nil {
		return nil, false
	}
	return o.Upcs, true
}

// HasUpcs returns a boolean if a field has been set.
func (o *Item) HasUpcs() bool {
	if o != nil && o.Upcs != nil {
		return true
	}

	return false
}

// SetUpcs gets a reference to the given []string and assigns it to the Upcs field.
func (o *Item) SetUpcs(v []string) {
	o.Upcs = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Item) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Item) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Item) SetDescription(v string) {
	o.Description = &v
}

// GetBrand returns the Brand field value if set, zero value otherwise.
func (o *Item) GetBrand() string {
	if o == nil || o.Brand == nil {
		var ret string
		return ret
	}
	return *o.Brand
}

// GetBrandOk returns a tuple with the Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetBrandOk() (*string, bool) {
	if o == nil || o.Brand == nil {
		return nil, false
	}
	return o.Brand, true
}

// HasBrand returns a boolean if a field has been set.
func (o *Item) HasBrand() bool {
	if o != nil && o.Brand != nil {
		return true
	}

	return false
}

// SetBrand gets a reference to the given string and assigns it to the Brand field.
func (o *Item) SetBrand(v string) {
	o.Brand = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *Item) GetManufacturer() string {
	if o == nil || o.Manufacturer == nil {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetManufacturerOk() (*string, bool) {
	if o == nil || o.Manufacturer == nil {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *Item) HasManufacturer() bool {
	if o != nil && o.Manufacturer != nil {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *Item) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *Item) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *Item) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *Item) SetColor(v string) {
	o.Color = &v
}

// GetNewPrice returns the NewPrice field value if set, zero value otherwise.
func (o *Item) GetNewPrice() float32 {
	if o == nil || o.NewPrice == nil {
		var ret float32
		return ret
	}
	return *o.NewPrice
}

// GetNewPriceOk returns a tuple with the NewPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetNewPriceOk() (*float32, bool) {
	if o == nil || o.NewPrice == nil {
		return nil, false
	}
	return o.NewPrice, true
}

// HasNewPrice returns a boolean if a field has been set.
func (o *Item) HasNewPrice() bool {
	if o != nil && o.NewPrice != nil {
		return true
	}

	return false
}

// SetNewPrice gets a reference to the given float32 and assigns it to the NewPrice field.
func (o *Item) SetNewPrice(v float32) {
	o.NewPrice = &v
}

// GetUsedPrice returns the UsedPrice field value if set, zero value otherwise.
func (o *Item) GetUsedPrice() float32 {
	if o == nil || o.UsedPrice == nil {
		var ret float32
		return ret
	}
	return *o.UsedPrice
}

// GetUsedPriceOk returns a tuple with the UsedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetUsedPriceOk() (*float32, bool) {
	if o == nil || o.UsedPrice == nil {
		return nil, false
	}
	return o.UsedPrice, true
}

// HasUsedPrice returns a boolean if a field has been set.
func (o *Item) HasUsedPrice() bool {
	if o != nil && o.UsedPrice != nil {
		return true
	}

	return false
}

// SetUsedPrice gets a reference to the given float32 and assigns it to the UsedPrice field.
func (o *Item) SetUsedPrice(v float32) {
	o.UsedPrice = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *Item) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || o.CurrencyCode == nil {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *Item) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode != nil {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *Item) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Item) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Item) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Item) SetUrl(v string) {
	o.Url = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *Item) GetFeatures() []string {
	if o == nil || o.Features == nil {
		var ret []string
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetFeaturesOk() (*[]string, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *Item) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *Item) SetFeatures(v []string) {
	o.Features = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *Item) GetDimensions() []map[string]interface{} {
	if o == nil || o.Dimensions == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetDimensionsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Dimensions == nil {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *Item) HasDimensions() bool {
	if o != nil && o.Dimensions != nil {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given []map[string]interface{} and assigns it to the Dimensions field.
func (o *Item) SetDimensions(v []map[string]interface{}) {
	o.Dimensions = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *Item) GetImages() []string {
	if o == nil || o.Images == nil {
		var ret []string
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetImagesOk() (*[]string, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *Item) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *Item) SetImages(v []string) {
	o.Images = &v
}

// GetMatchedItems returns the MatchedItems field value if set, zero value otherwise.
func (o *Item) GetMatchedItems() []map[string]interface{} {
	if o == nil || o.MatchedItems == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.MatchedItems
}

// GetMatchedItemsOk returns a tuple with the MatchedItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetMatchedItemsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.MatchedItems == nil {
		return nil, false
	}
	return o.MatchedItems, true
}

// HasMatchedItems returns a boolean if a field has been set.
func (o *Item) HasMatchedItems() bool {
	if o != nil && o.MatchedItems != nil {
		return true
	}

	return false
}

// SetMatchedItems gets a reference to the given []map[string]interface{} and assigns it to the MatchedItems field.
func (o *Item) SetMatchedItems(v []map[string]interface{}) {
	o.MatchedItems = &v
}

// GetIsoCountryCodes returns the IsoCountryCodes field value if set, zero value otherwise.
func (o *Item) GetIsoCountryCodes() []string {
	if o == nil || o.IsoCountryCodes == nil {
		var ret []string
		return ret
	}
	return *o.IsoCountryCodes
}

// GetIsoCountryCodesOk returns a tuple with the IsoCountryCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetIsoCountryCodesOk() (*[]string, bool) {
	if o == nil || o.IsoCountryCodes == nil {
		return nil, false
	}
	return o.IsoCountryCodes, true
}

// HasIsoCountryCodes returns a boolean if a field has been set.
func (o *Item) HasIsoCountryCodes() bool {
	if o != nil && o.IsoCountryCodes != nil {
		return true
	}

	return false
}

// SetIsoCountryCodes gets a reference to the given []string and assigns it to the IsoCountryCodes field.
func (o *Item) SetIsoCountryCodes(v []string) {
	o.IsoCountryCodes = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *Item) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *Item) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *Item) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCompanyAddress returns the CompanyAddress field value if set, zero value otherwise.
func (o *Item) GetCompanyAddress() string {
	if o == nil || o.CompanyAddress == nil {
		var ret string
		return ret
	}
	return *o.CompanyAddress
}

// GetCompanyAddressOk returns a tuple with the CompanyAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetCompanyAddressOk() (*string, bool) {
	if o == nil || o.CompanyAddress == nil {
		return nil, false
	}
	return o.CompanyAddress, true
}

// HasCompanyAddress returns a boolean if a field has been set.
func (o *Item) HasCompanyAddress() bool {
	if o != nil && o.CompanyAddress != nil {
		return true
	}

	return false
}

// SetCompanyAddress gets a reference to the given string and assigns it to the CompanyAddress field.
func (o *Item) SetCompanyAddress(v string) {
	o.CompanyAddress = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *Item) GetCategories() []string {
	if o == nil || o.Categories == nil {
		var ret []string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetCategoriesOk() (*[]string, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *Item) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *Item) SetCategories(v []string) {
	o.Categories = &v
}

// GetCategoryHierarchies returns the CategoryHierarchies field value if set, zero value otherwise.
func (o *Item) GetCategoryHierarchies() []string {
	if o == nil || o.CategoryHierarchies == nil {
		var ret []string
		return ret
	}
	return *o.CategoryHierarchies
}

// GetCategoryHierarchiesOk returns a tuple with the CategoryHierarchies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Item) GetCategoryHierarchiesOk() (*[]string, bool) {
	if o == nil || o.CategoryHierarchies == nil {
		return nil, false
	}
	return o.CategoryHierarchies, true
}

// HasCategoryHierarchies returns a boolean if a field has been set.
func (o *Item) HasCategoryHierarchies() bool {
	if o != nil && o.CategoryHierarchies != nil {
		return true
	}

	return false
}

// SetCategoryHierarchies gets a reference to the given []string and assigns it to the CategoryHierarchies field.
func (o *Item) SetCategoryHierarchies(v []string) {
	o.CategoryHierarchies = &v
}

func (o Item) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Upc != nil {
		toSerialize["upc"] = o.Upc
	}
	if o.Ean != nil {
		toSerialize["ean"] = o.Ean
	}
	if o.Isbn != nil {
		toSerialize["isbn"] = o.Isbn
	}
	if o.Asin != nil {
		toSerialize["asin"] = o.Asin
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Sku != nil {
		toSerialize["sku"] = o.Sku
	}
	if o.Mpn != nil {
		toSerialize["mpn"] = o.Mpn
	}
	if o.PartNumber != nil {
		toSerialize["part_number"] = o.PartNumber
	}
	if o.Upcs != nil {
		toSerialize["upcs"] = o.Upcs
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Brand != nil {
		toSerialize["brand"] = o.Brand
	}
	if o.Manufacturer != nil {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.NewPrice != nil {
		toSerialize["new_price"] = o.NewPrice
	}
	if o.UsedPrice != nil {
		toSerialize["used_price"] = o.UsedPrice
	}
	if o.CurrencyCode != nil {
		toSerialize["currency_code"] = o.CurrencyCode
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.Dimensions != nil {
		toSerialize["dimensions"] = o.Dimensions
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.MatchedItems != nil {
		toSerialize["matched_items"] = o.MatchedItems
	}
	if o.IsoCountryCodes != nil {
		toSerialize["iso_country_codes"] = o.IsoCountryCodes
	}
	if o.CompanyName != nil {
		toSerialize["company_name"] = o.CompanyName
	}
	if o.CompanyAddress != nil {
		toSerialize["company_address"] = o.CompanyAddress
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.CategoryHierarchies != nil {
		toSerialize["category_hierarchies"] = o.CategoryHierarchies
	}
	return json.Marshal(toSerialize)
}

type NullableItem struct {
	value *Item
	isSet bool
}

func (v NullableItem) Get() *Item {
	return v.value
}

func (v *NullableItem) Set(val *Item) {
	v.value = val
	v.isSet = true
}

func (v NullableItem) IsSet() bool {
	return v.isSet
}

func (v *NullableItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItem(val *Item) *NullableItem {
	return &NullableItem{value: val, isSet: true}
}

func (v NullableItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
