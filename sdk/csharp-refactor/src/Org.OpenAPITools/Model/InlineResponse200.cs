/* 
 * Barcodable.com API
 *
 * Barcodable.com API
 *
 * OpenAPI spec version: 1.5.0
 * Contact: support@barcodable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// InlineResponse200
    /// </summary>
    [DataContract]
    public partial class InlineResponse200 :  IEquatable<InlineResponse200>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse200" /> class.
        /// </summary>
        /// <param name="upcs">A list of UPCs.</param>
        /// <param name="eans">A list of EANs.</param>
        /// <param name="asins">A list of ASINs.</param>
        /// <param name="message">message.</param>
        public InlineResponse200(List<string> upcs = default(List<string>), List<string> eans = default(List<string>), List<string> asins = default(List<string>), string message = default(string))
        {
            this.Upcs = upcs;
            this.Eans = eans;
            this.Asins = asins;
            this.Message = message;
        }
        
        /// <summary>
        /// A list of UPCs
        /// </summary>
        /// <value>A list of UPCs</value>
        [DataMember(Name="upcs", EmitDefaultValue=false)]
        public List<string> Upcs { get; set; }

        /// <summary>
        /// A list of EANs
        /// </summary>
        /// <value>A list of EANs</value>
        [DataMember(Name="eans", EmitDefaultValue=false)]
        public List<string> Eans { get; set; }

        /// <summary>
        /// A list of ASINs
        /// </summary>
        /// <value>A list of ASINs</value>
        [DataMember(Name="asins", EmitDefaultValue=false)]
        public List<string> Asins { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse200 {\n");
            sb.Append("  Upcs: ").Append(Upcs).Append("\n");
            sb.Append("  Eans: ").Append(Eans).Append("\n");
            sb.Append("  Asins: ").Append(Asins).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse200);
        }

        /// <summary>
        /// Returns true if InlineResponse200 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse200 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse200 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Upcs == input.Upcs ||
                    this.Upcs != null &&
                    this.Upcs.SequenceEqual(input.Upcs)
                ) && 
                (
                    this.Eans == input.Eans ||
                    this.Eans != null &&
                    this.Eans.SequenceEqual(input.Eans)
                ) && 
                (
                    this.Asins == input.Asins ||
                    this.Asins != null &&
                    this.Asins.SequenceEqual(input.Asins)
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Upcs != null)
                    hashCode = hashCode * 59 + this.Upcs.GetHashCode();
                if (this.Eans != null)
                    hashCode = hashCode * 59 + this.Eans.GetHashCode();
                if (this.Asins != null)
                    hashCode = hashCode * 59 + this.Asins.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
