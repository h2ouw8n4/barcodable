{-
   Barcodable.com API
   Barcodable.com API

   The version of the OpenAPI document: 1.5.0
   Contact: support@barcodable.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.NotFound exposing (NotFound, decoder, encode, encodeWithTag, toString)

import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias NotFound =
    { message : Maybe (String)
    , status : Maybe (Int)
    }


decoder : Decoder NotFound
decoder =
    Decode.succeed NotFound
        |> optional "message" (Decode.nullable Decode.string) Nothing
        |> optional "status" (Decode.nullable Decode.int) Nothing



encode : NotFound -> Encode.Value
encode =
    Encode.object << encodePairs


encodeWithTag : ( String, String ) -> NotFound -> Encode.Value
encodeWithTag (tagField, tag) model =
    Encode.object <| encodePairs model ++ [ ( tagField, Encode.string tag ) ]


encodePairs : NotFound -> List (String, Encode.Value)
encodePairs model =
    [ ( "message", Maybe.withDefault Encode.null (Maybe.map Encode.string model.message) )
    , ( "status", Maybe.withDefault Encode.null (Maybe.map Encode.int model.status) )
    ]



toString : NotFound -> String
toString =
    Encode.encode 0 << encode




