/**
 * Barcodable.com API
 * Barcodable.com API
 *
 * OpenAPI spec version: 1.5.0
 * Contact: support@barcodable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-beta2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse200', 'model/InlineResponse400'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/InlineResponse200'), require('../model/InlineResponse400'));
  } else {
    // Browser globals (root is window)
    if (!root.BarcodablecomApi) {
      root.BarcodablecomApi = {};
    }
    root.BarcodablecomApi.ProductConversionApi = factory(root.BarcodablecomApi.ApiClient, root.BarcodablecomApi.InlineResponse200, root.BarcodablecomApi.InlineResponse400);
  }
}(this, function(ApiClient, InlineResponse200, InlineResponse400) {
  'use strict';

  /**
   * ProductConversion service.
   * @module api/ProductConversionApi
   * @version 1.5.0
   */

  /**
   * Constructs a new ProductConversionApi. 
   * @alias module:api/ProductConversionApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the convertCode operation.
     * @callback module:api/ProductConversionApi~convertCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Convert between UPC, EAN, and ASIN product codes.
     * Returns the converted UPC, EAN, and ASIN codes.
     * @param {String} upcEanAsin UPC, EAN, or ASIN
     * @param {module:api/ProductConversionApi~convertCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    this.convertCode = function(upcEanAsin, callback) {
      var postBody = null;

      // verify the required parameter 'upcEanAsin' is set
      if (upcEanAsin === undefined || upcEanAsin === null) {
        throw new Error("Missing the required parameter 'upcEanAsin' when calling convertCode");
      }


      var pathParams = {
        'upc | ean | asin': upcEanAsin
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/api/v1/convert/{upc | ean | asin}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
