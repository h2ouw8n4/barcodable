/**
 * Barcodable.com API
 * Barcodable.com API
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: support@barcodable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  InlineResponse200,
} from './models';

/**
 * convertCode - parameters interface
 */
export interface IConvertCodeParams {
  upcEanAsin: string;
}

/**
 * ProductConversionApi - API class
 */
@autoinject()
export class ProductConversionApi extends Api {

  /**
   * Creates a new ProductConversionApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Convert between UPC, EAN, and ASIN product codes.
   * Returns the converted UPC, EAN, and ASIN codes.
   * @param params.upcEanAsin UPC, EAN, or ASIN
   */
  async convertCode(params: IConvertCodeParams): Promise<InlineResponse200> {
    // Verify required parameters are set
    this.ensureParamIsSet('convertCode', params, 'upcEanAsin');

    // Create URL to call
    const url = `${this.basePath}/api/v1/convert/{upc | ean | asin}`
      .replace(`{${'upc | ean | asin'}}`, encodeURIComponent(`${params['upcEanAsin']}`));

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

