/**
 * Barcodable.com API
 * Barcodable.com API
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: support@barcodable.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Inline_response_200.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Inline_response_200_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Inline_response_200_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Inline_response_200
    : public ModelBase
{
public:
    Inline_response_200();
    virtual ~Inline_response_200();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Inline_response_200 members

    /// <summary>
    /// A list of UPCs
    /// </summary>
    std::vector<utility::string_t>& getUpcs();
    bool upcsIsSet() const;
    void unsetUpcs();

    void setUpcs(const std::vector<utility::string_t>& value);

    /// <summary>
    /// A list of EANs
    /// </summary>
    std::vector<utility::string_t>& getEans();
    bool eansIsSet() const;
    void unsetEans();

    void setEans(const std::vector<utility::string_t>& value);

    /// <summary>
    /// A list of ASINs
    /// </summary>
    std::vector<utility::string_t>& getAsins();
    bool asinsIsSet() const;
    void unsetAsins();

    void setAsins(const std::vector<utility::string_t>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMessage() const;
    bool messageIsSet() const;
    void unsetMessage();

    void setMessage(const utility::string_t& value);


protected:
    std::vector<utility::string_t> m_Upcs;
    bool m_UpcsIsSet;
    std::vector<utility::string_t> m_Eans;
    bool m_EansIsSet;
    std::vector<utility::string_t> m_Asins;
    bool m_AsinsIsSet;
    utility::string_t m_Message;
    bool m_MessageIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Inline_response_200_H_ */
