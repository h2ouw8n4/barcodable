/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.InlineResponse200;
import org.openapitools.model.InlineResponse400;
import org.openapitools.model.InvalidCode;
import org.openapitools.model.Item;
import org.openapitools.model.NotFound;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-03-27T18:11:19.626-04:00[America/New_York]")

@Validated
@Api(value = "api", description = "the api API")
public interface ApiApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /api/v1/convert/{upc | ean | asin} : Convert between UPC, EAN, and ASIN product codes.
     * Returns the converted UPC, EAN, and ASIN codes.
     *
     * @param upcEanAsin UPC, EAN, or ASIN (required)
     * @return successful operation (status code 200)
     *         or search results matching criteria (status code 400)
     */
    @ApiOperation(value = "Convert between UPC, EAN, and ASIN product codes.", nickname = "convertCode", notes = "Returns the converted UPC, EAN, and ASIN codes.", response = InlineResponse200.class, tags={ "Product Conversion", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = InlineResponse200.class),
        @ApiResponse(code = 400, message = "search results matching criteria", response = InlineResponse400.class) })
    @RequestMapping(value = "/api/v1/convert/{upc | ean | asin}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse200> convertCode(@ApiParam(value = "UPC, EAN, or ASIN",required=true) @PathVariable("upc | ean | asin") String upcEanAsin) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"asins\" : [ \"B01M1EXQY4\" ], \"message\" : \"OK\", \"upcs\" : [ \"190198155795\" ], \"eans\" : [ 1.90198155795E11 ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/asin/{asin} : Find item by asin code
     * Returns a single item
     *
     * @param asin ASIN code of item to return (required)
     * @return successful operation (status code 200)
     *         or search results matching criteria (status code 400)
     *         or search results matching criteria (status code 404)
     */
    @ApiOperation(value = "Find item by asin code", nickname = "getItemByASIN", notes = "Returns a single item", response = Item.class, tags={ "Product Lookup", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Item.class),
        @ApiResponse(code = 400, message = "search results matching criteria", response = InvalidCode.class),
        @ApiResponse(code = 404, message = "search results matching criteria", response = NotFound.class) })
    @RequestMapping(value = "/api/v1/asin/{asin}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Item> getItemByASIN(@ApiParam(value = "ASIN code of item to return",required=true) @PathVariable("asin") String asin) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"color\" : \"Black\", \"iso_country_codes\" : [ \"US\", \"GB\" ], \"isbn\" : \"9780198155795\", \"description\" : \"The latest iPhone with advanced camera, better battery life, immersive speakers and water resistance!\", \"title\" : \"Apple iPhone 7 Unlocked Phone 128 GB - US Version (Black)\", \"currency_code\" : \"USD\", \"company_address\" : \"101 Infinite Loop, Cupertino, CA 95014\", \"manufacturer\" : \"Apple\", \"features\" : [ \"Smooth, continuous unibody design. 3D Touch, Live Photos, an A9 chip, advanced cameras, and a 4.7-inch Retina HD display. And so much more.\", \"The most advanced chip ever in a smartphone is even faster and now features an integrated M9 motion coprocessor.\" ], \"ean\" : \"190198155795\", \"used_price\" : 659.95, \"categories\" : [ \"Unlocked Cell Phones\", \"Electronics\" ], \"sku\" : \"903061477\", \"brand\" : \"Apple\", \"images\" : [ \"https://images-na.ssl-images-amazon.com/images/I/317AuSoRaHL.jpg\", \"https://images-na.ssl-images-amazon.com/images/I/41Whf3N9i2L.jpg\" ], \"upc\" : \"190198155795\", \"mpn\" : \"A1660\", \"new_price\" : 799.95, \"matched_items\" : [ \"{}\", \"{}\" ], \"url\" : \"https://www.amazon.com/Apple-iPhone-Unlocked-Phone-128/dp/B01M1EXQY4\", \"company_name\" : \"Apple Inc.\", \"part_number\" : \"14\", \"asin\" : \"B01M1EXQY4\", \"upcs\" : [ \"190198071835, 647627503790, 759776410383, 190198068507\" ], \"category_hierarchies\" : [ [ \"Cell Phones & Accessories\", \"Cell Phones\", \"Unlocked Cell Phones\" ] ], \"dimensions\" : [ \"{}\", \"{}\" ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/ean/{ean} : Find item by UPC code
     * Returns a single item
     *
     * @param ean EAN code of item to return (required)
     * @return successful operation (status code 200)
     *         or search results matching criteria (status code 400)
     *         or search results matching criteria (status code 404)
     */
    @ApiOperation(value = "Find item by UPC code", nickname = "getItemByEAN", notes = "Returns a single item", response = Item.class, tags={ "Product Lookup", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Item.class),
        @ApiResponse(code = 400, message = "search results matching criteria", response = InvalidCode.class),
        @ApiResponse(code = 404, message = "search results matching criteria", response = NotFound.class) })
    @RequestMapping(value = "/api/v1/ean/{ean}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Item> getItemByEAN(@ApiParam(value = "EAN code of item to return",required=true) @PathVariable("ean") String ean) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"color\" : \"Black\", \"iso_country_codes\" : [ \"US\", \"GB\" ], \"isbn\" : \"9780198155795\", \"description\" : \"The latest iPhone with advanced camera, better battery life, immersive speakers and water resistance!\", \"title\" : \"Apple iPhone 7 Unlocked Phone 128 GB - US Version (Black)\", \"currency_code\" : \"USD\", \"company_address\" : \"101 Infinite Loop, Cupertino, CA 95014\", \"manufacturer\" : \"Apple\", \"features\" : [ \"Smooth, continuous unibody design. 3D Touch, Live Photos, an A9 chip, advanced cameras, and a 4.7-inch Retina HD display. And so much more.\", \"The most advanced chip ever in a smartphone is even faster and now features an integrated M9 motion coprocessor.\" ], \"ean\" : \"190198155795\", \"used_price\" : 659.95, \"categories\" : [ \"Unlocked Cell Phones\", \"Electronics\" ], \"sku\" : \"903061477\", \"brand\" : \"Apple\", \"images\" : [ \"https://images-na.ssl-images-amazon.com/images/I/317AuSoRaHL.jpg\", \"https://images-na.ssl-images-amazon.com/images/I/41Whf3N9i2L.jpg\" ], \"upc\" : \"190198155795\", \"mpn\" : \"A1660\", \"new_price\" : 799.95, \"matched_items\" : [ \"{}\", \"{}\" ], \"url\" : \"https://www.amazon.com/Apple-iPhone-Unlocked-Phone-128/dp/B01M1EXQY4\", \"company_name\" : \"Apple Inc.\", \"part_number\" : \"14\", \"asin\" : \"B01M1EXQY4\", \"upcs\" : [ \"190198071835, 647627503790, 759776410383, 190198068507\" ], \"category_hierarchies\" : [ [ \"Cell Phones & Accessories\", \"Cell Phones\", \"Unlocked Cell Phones\" ] ], \"dimensions\" : [ \"{}\", \"{}\" ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/upc/{upc} : Find item by UPC code
     * Returns a single item
     *
     * @param upc UPC code of item to return (required)
     * @return successful operation (status code 200)
     *         or search results matching criteria (status code 400)
     *         or search results matching criteria (status code 404)
     */
    @ApiOperation(value = "Find item by UPC code", nickname = "getItemByUPC", notes = "Returns a single item", response = Item.class, tags={ "Product Lookup", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Item.class),
        @ApiResponse(code = 400, message = "search results matching criteria", response = InvalidCode.class),
        @ApiResponse(code = 404, message = "search results matching criteria", response = NotFound.class) })
    @RequestMapping(value = "/api/v1/upc/{upc}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Item> getItemByUPC(@ApiParam(value = "UPC code of item to return",required=true) @PathVariable("upc") String upc) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"color\" : \"Black\", \"iso_country_codes\" : [ \"US\", \"GB\" ], \"isbn\" : \"9780198155795\", \"description\" : \"The latest iPhone with advanced camera, better battery life, immersive speakers and water resistance!\", \"title\" : \"Apple iPhone 7 Unlocked Phone 128 GB - US Version (Black)\", \"currency_code\" : \"USD\", \"company_address\" : \"101 Infinite Loop, Cupertino, CA 95014\", \"manufacturer\" : \"Apple\", \"features\" : [ \"Smooth, continuous unibody design. 3D Touch, Live Photos, an A9 chip, advanced cameras, and a 4.7-inch Retina HD display. And so much more.\", \"The most advanced chip ever in a smartphone is even faster and now features an integrated M9 motion coprocessor.\" ], \"ean\" : \"190198155795\", \"used_price\" : 659.95, \"categories\" : [ \"Unlocked Cell Phones\", \"Electronics\" ], \"sku\" : \"903061477\", \"brand\" : \"Apple\", \"images\" : [ \"https://images-na.ssl-images-amazon.com/images/I/317AuSoRaHL.jpg\", \"https://images-na.ssl-images-amazon.com/images/I/41Whf3N9i2L.jpg\" ], \"upc\" : \"190198155795\", \"mpn\" : \"A1660\", \"new_price\" : 799.95, \"matched_items\" : [ \"{}\", \"{}\" ], \"url\" : \"https://www.amazon.com/Apple-iPhone-Unlocked-Phone-128/dp/B01M1EXQY4\", \"company_name\" : \"Apple Inc.\", \"part_number\" : \"14\", \"asin\" : \"B01M1EXQY4\", \"upcs\" : [ \"190198071835, 647627503790, 759776410383, 190198068507\" ], \"category_hierarchies\" : [ [ \"Cell Phones & Accessories\", \"Cell Phones\", \"Unlocked Cell Phones\" ] ], \"dimensions\" : [ \"{}\", \"{}\" ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
