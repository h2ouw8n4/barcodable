/*
 * Barcodable.com API
 * Barcodable.com API
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: support@barcodable.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASItem
 */
public class OASItem implements OAS.MappedProperties {
    /**
     * Get upc
     * @return upc
     */
    public String upc { get; set; }

    /**
     * Get ean
     * @return ean
     */
    public String ean { get; set; }

    /**
     * Get isbn
     * @return isbn
     */
    public String isbn { get; set; }

    /**
     * Get asin
     * @return asin
     */
    public String asin { get; set; }

    /**
     * Get title
     * @return title
     */
    public String title { get; set; }

    /**
     * Get sku
     * @return sku
     */
    public String sku { get; set; }

    /**
     * Get mpn
     * @return mpn
     */
    public String mpn { get; set; }

    /**
     * Get partNumber
     * @return partNumber
     */
    public String partNumber { get; set; }

    /**
     * A list of matching upc codes.
     * @return upcs
     */
    public List<String> upcs { get; set; }

    /**
     * Get description
     * @return description
     */
    public String description { get; set; }

    /**
     * Get brand
     * @return brand
     */
    public String brand { get; set; }

    /**
     * Get manufacturer
     * @return manufacturer
     */
    public String manufacturer { get; set; }

    /**
     * Get color
     * @return color
     */
    public String color { get; set; }

    /**
     * Get newPrice
     * @return newPrice
     */
    public Double newPrice { get; set; }

    /**
     * Get usedPrice
     * @return usedPrice
     */
    public Double usedPrice { get; set; }

    /**
     * Get currencyCode
     * @return currencyCode
     */
    public String currencyCode { get; set; }

    /**
     * Get url
     * @return url
     */
    public String url { get; set; }

    /**
     * A list of product feature descriptions.
     * @return features
     */
    public List<String> features { get; set; }

    /**
     * Product dimensions and weight.\n (\'meters\', \'centimeters\', \'millimeters\', \'inches\', \'feet\', \'yards\', \'ounces\', \'pounds\', \'grams\', \'milligrams\', \'kilograms\')
     * @return dimensions
     */
    public List<Object> dimensions { get; set; }

    /**
     * A list product images.
     * @return images
     */
    public List<String> images { get; set; }

    /**
     * Matched items for this product.
     * @return matchedItems
     */
    public List<Object> matchedItems { get; set; }

    /**
     * A list of country codes from which this item belongs.
     * @return isoCountryCodes
     */
    public List<String> isoCountryCodes { get; set; }

    /**
     * The company name registered to the product\'s UPC or EAN.
     * @return companyName
     */
    public String companyName { get; set; }

    /**
     * The company address registered to the product\'s UPC or EAN.
     * @return companyAddress
     */
    public String companyAddress { get; set; }

    /**
     * A list of categories for this product.
     * @return categories
     */
    public List<String> categories { get; set; }

    /**
     * A list of category hierarchies for this product. Categories are listed in order of generic category to most specific category.
     * @return categoryHierarchies
     */
    public List<String> categoryHierarchies { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'part_number' => 'partNumber',
        'new_price' => 'newPrice',
        'used_price' => 'usedPrice',
        'currency_code' => 'currencyCode',
        'matched_items' => 'matchedItems',
        'iso_country_codes' => 'isoCountryCodes',
        'company_name' => 'companyName',
        'company_address' => 'companyAddress',
        'category_hierarchies' => 'categoryHierarchies'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASItem() {
        upcs = new List<String>();
        features = new List<String>();
        dimensions = new List<Object>();
        images = new List<String>();
        matchedItems = new List<Object>();
        isoCountryCodes = new List<String>();
        categories = new List<String>();
        categoryHierarchies = new List<String>();
    }

    public static OASItem getExample() {
        OASItem item = new OASItem();
          item.upc = '190198155795';
          item.ean = '190198155795';
          item.isbn = '9780198155795';
          item.asin = 'B01M1EXQY4';
          item.title = 'Apple iPhone 7 Unlocked Phone 128 GB - US Version (Black)';
          item.sku = '903061477';
          item.mpn = 'A1660';
          item.partNumber = '14';
          item.upcs = new List<String>{''};
          item.description = 'The latest iPhone with advanced camera, better battery life, immersive speakers and water resistance!';
          item.brand = 'Apple';
          item.manufacturer = 'Apple';
          item.color = 'Black';
          item.newPrice = 799.95;
          item.usedPrice = 659.95;
          item.currencyCode = 'USD';
          item.url = 'https://www.amazon.com/Apple-iPhone-Unlocked-Phone-128/dp/B01M1EXQY4';
          item.features = new List<String>{''};
          item.dimensions = new List<Object>{null};
          item.images = new List<String>{''};
          item.matchedItems = new List<Object>{null};
          item.isoCountryCodes = new List<String>{''};
          item.companyName = 'Apple Inc.';
          item.companyAddress = '101 Infinite Loop, Cupertino, CA 95014';
          item.categories = new List<String>{''};
          item.categoryHierarchies = new List<String>{''};
        return item;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASItem) {           
            OASItem item = (OASItem) obj;
            return this.upc == item.upc
                && this.ean == item.ean
                && this.isbn == item.isbn
                && this.asin == item.asin
                && this.title == item.title
                && this.sku == item.sku
                && this.mpn == item.mpn
                && this.partNumber == item.partNumber
                && this.upcs == item.upcs
                && this.description == item.description
                && this.brand == item.brand
                && this.manufacturer == item.manufacturer
                && this.color == item.color
                && this.newPrice == item.newPrice
                && this.usedPrice == item.usedPrice
                && this.currencyCode == item.currencyCode
                && this.url == item.url
                && this.features == item.features
                && this.dimensions == item.dimensions
                && this.images == item.images
                && this.matchedItems == item.matchedItems
                && this.isoCountryCodes == item.isoCountryCodes
                && this.companyName == item.companyName
                && this.companyAddress == item.companyAddress
                && this.categories == item.categories
                && this.categoryHierarchies == item.categoryHierarchies;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (upc == null ? 0 : System.hashCode(upc));
        hashCode = (17 * hashCode) + (ean == null ? 0 : System.hashCode(ean));
        hashCode = (17 * hashCode) + (isbn == null ? 0 : System.hashCode(isbn));
        hashCode = (17 * hashCode) + (asin == null ? 0 : System.hashCode(asin));
        hashCode = (17 * hashCode) + (title == null ? 0 : System.hashCode(title));
        hashCode = (17 * hashCode) + (sku == null ? 0 : System.hashCode(sku));
        hashCode = (17 * hashCode) + (mpn == null ? 0 : System.hashCode(mpn));
        hashCode = (17 * hashCode) + (partNumber == null ? 0 : System.hashCode(partNumber));
        hashCode = (17 * hashCode) + (upcs == null ? 0 : System.hashCode(upcs));
        hashCode = (17 * hashCode) + (description == null ? 0 : System.hashCode(description));
        hashCode = (17 * hashCode) + (brand == null ? 0 : System.hashCode(brand));
        hashCode = (17 * hashCode) + (manufacturer == null ? 0 : System.hashCode(manufacturer));
        hashCode = (17 * hashCode) + (color == null ? 0 : System.hashCode(color));
        hashCode = (17 * hashCode) + (newPrice == null ? 0 : System.hashCode(newPrice));
        hashCode = (17 * hashCode) + (usedPrice == null ? 0 : System.hashCode(usedPrice));
        hashCode = (17 * hashCode) + (currencyCode == null ? 0 : System.hashCode(currencyCode));
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        hashCode = (17 * hashCode) + (features == null ? 0 : System.hashCode(features));
        hashCode = (17 * hashCode) + (dimensions == null ? 0 : System.hashCode(dimensions));
        hashCode = (17 * hashCode) + (images == null ? 0 : System.hashCode(images));
        hashCode = (17 * hashCode) + (matchedItems == null ? 0 : System.hashCode(matchedItems));
        hashCode = (17 * hashCode) + (isoCountryCodes == null ? 0 : System.hashCode(isoCountryCodes));
        hashCode = (17 * hashCode) + (companyName == null ? 0 : System.hashCode(companyName));
        hashCode = (17 * hashCode) + (companyAddress == null ? 0 : System.hashCode(companyAddress));
        hashCode = (17 * hashCode) + (categories == null ? 0 : System.hashCode(categories));
        hashCode = (17 * hashCode) + (categoryHierarchies == null ? 0 : System.hashCode(categoryHierarchies));
        return hashCode;
    }
}

