{-
   Barcodable.com API

   Barcodable.com API

   OpenAPI Version: 3.0.0
   Barcodable.com API API version: 1.5.0
   Contact: support@barcodable.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Barcodable.com.API.ProductLookup
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Barcodable.com.API.ProductLookup where

import Barcodable.com.Core
import Barcodable.com.MimeTypes
import Barcodable.com.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** ProductLookup

-- *** getItemByASIN

-- | @GET \/api\/v1\/asin\/{asin}@
-- 
-- Find item by asin code
-- 
-- Returns a single item
-- 
getItemByASIN 
  :: Asin -- ^ "asin" -  ASIN code of item to return
  -> comRequest GetItemByASIN MimeNoContent Item MimeJSON
getItemByASIN (Asin asin) =
  _mkRequest "GET" ["/api/v1/asin/",toPath asin]

data GetItemByASIN  
-- | @application/json@
instance Produces GetItemByASIN MimeJSON


-- *** getItemByEAN

-- | @GET \/api\/v1\/ean\/{ean}@
-- 
-- Find item by UPC code
-- 
-- Returns a single item
-- 
getItemByEAN 
  :: Ean -- ^ "ean" -  EAN code of item to return
  -> comRequest GetItemByEAN MimeNoContent Item MimeJSON
getItemByEAN (Ean ean) =
  _mkRequest "GET" ["/api/v1/ean/",toPath ean]

data GetItemByEAN  
-- | @application/json@
instance Produces GetItemByEAN MimeJSON


-- *** getItemByUPC

-- | @GET \/api\/v1\/upc\/{upc}@
-- 
-- Find item by UPC code
-- 
-- Returns a single item
-- 
getItemByUPC 
  :: Upc -- ^ "upc" -  UPC code of item to return
  -> comRequest GetItemByUPC MimeNoContent Item MimeJSON
getItemByUPC (Upc upc) =
  _mkRequest "GET" ["/api/v1/upc/",toPath upc]

data GetItemByUPC  
-- | @application/json@
instance Produces GetItemByUPC MimeJSON

