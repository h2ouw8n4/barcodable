// tslint:disable
/**
 * Barcodable.com API
 * Barcodable.com API
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: support@barcodable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Item
 */
export interface Item  {
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    upc?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    ean?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    isbn?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    asin?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    sku?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    mpn?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    partNumber?: string;
    /**
     * A list of matching upc codes.
     * @type {Array<string>}
     * @memberof Item
     */
    upcs?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    brand?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    manufacturer?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    color?: string;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    newPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    usedPrice?: number;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    currencyCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    url?: string;
    /**
     * A list of product feature descriptions.
     * @type {Array<string>}
     * @memberof Item
     */
    features?: Array<string>;
    /**
     * Product dimensions and weight.  (\'meters\', \'centimeters\', \'millimeters\', \'inches\', \'feet\', \'yards\', \'ounces\', \'pounds\', \'grams\', \'milligrams\', \'kilograms\')
     * @type {Array<object>}
     * @memberof Item
     */
    dimensions?: Array<object>;
    /**
     * A list product images.
     * @type {Array<string>}
     * @memberof Item
     */
    images?: Array<string>;
    /**
     * Matched items for this product.
     * @type {Array<object>}
     * @memberof Item
     */
    matchedItems?: Array<object>;
    /**
     * A list of country codes from which this item belongs.
     * @type {Array<string>}
     * @memberof Item
     */
    isoCountryCodes?: Array<string>;
    /**
     * The company name registered to the product\'s UPC or EAN.
     * @type {string}
     * @memberof Item
     */
    companyName?: string;
    /**
     * The company address registered to the product\'s UPC or EAN.
     * @type {string}
     * @memberof Item
     */
    companyAddress?: string;
    /**
     * A list of categories for this product.
     * @type {Array<string>}
     * @memberof Item
     */
    categories?: Array<string>;
    /**
     * A list of category hierarchies for this product. Categories are listed in order of generic category to most specific category.
     * @type {Array<string>}
     * @memberof Item
     */
    categoryHierarchies?: Array<string>;
}

export function ItemFromJSON(json: any): Item {
    return {
        'upc': !exists(json, 'upc') ? undefined : json['upc'],
        'ean': !exists(json, 'ean') ? undefined : json['ean'],
        'isbn': !exists(json, 'isbn') ? undefined : json['isbn'],
        'asin': !exists(json, 'asin') ? undefined : json['asin'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'mpn': !exists(json, 'mpn') ? undefined : json['mpn'],
        'partNumber': !exists(json, 'part_number') ? undefined : json['part_number'],
        'upcs': !exists(json, 'upcs') ? undefined : json['upcs'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'brand': !exists(json, 'brand') ? undefined : json['brand'],
        'manufacturer': !exists(json, 'manufacturer') ? undefined : json['manufacturer'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        'newPrice': !exists(json, 'new_price') ? undefined : json['new_price'],
        'usedPrice': !exists(json, 'used_price') ? undefined : json['used_price'],
        'currencyCode': !exists(json, 'currency_code') ? undefined : json['currency_code'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'features': !exists(json, 'features') ? undefined : json['features'],
        'dimensions': !exists(json, 'dimensions') ? undefined : json['dimensions'],
        'images': !exists(json, 'images') ? undefined : json['images'],
        'matchedItems': !exists(json, 'matched_items') ? undefined : json['matched_items'],
        'isoCountryCodes': !exists(json, 'iso_country_codes') ? undefined : json['iso_country_codes'],
        'companyName': !exists(json, 'company_name') ? undefined : json['company_name'],
        'companyAddress': !exists(json, 'company_address') ? undefined : json['company_address'],
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'categoryHierarchies': !exists(json, 'category_hierarchies') ? undefined : json['category_hierarchies'],
    };
}

export function ItemToJSON(value?: Item): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'upc': value.upc,
        'ean': value.ean,
        'isbn': value.isbn,
        'asin': value.asin,
        'title': value.title,
        'sku': value.sku,
        'mpn': value.mpn,
        'part_number': value.partNumber,
        'upcs': value.upcs,
        'description': value.description,
        'brand': value.brand,
        'manufacturer': value.manufacturer,
        'color': value.color,
        'new_price': value.newPrice,
        'used_price': value.usedPrice,
        'currency_code': value.currencyCode,
        'url': value.url,
        'features': value.features,
        'dimensions': value.dimensions,
        'images': value.images,
        'matched_items': value.matchedItems,
        'iso_country_codes': value.isoCountryCodes,
        'company_name': value.companyName,
        'company_address': value.companyAddress,
        'categories': value.categories,
        'category_hierarchies': value.categoryHierarchies,
    };
}


