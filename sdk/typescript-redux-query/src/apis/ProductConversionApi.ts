// tslint:disable
/**
 * Barcodable.com API
 * Barcodable.com API
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: support@barcodable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { HttpMethods, QueryConfig, ResponseBody, ResponseText } from 'redux-query';
import * as runtime from '../runtime';

import {
    InlineResponse200,
    InlineResponse200FromJSON,
    InlineResponse200ToJSON,
    InlineResponse400,
    InlineResponse400FromJSON,
    InlineResponse400ToJSON,
} from '../models';

export interface ConvertCodeRequest {
    upcEanAsin: string;
}


/**
 * Returns the converted UPC, EAN, and ASIN codes.
 * Convert between UPC, EAN, and ASIN product codes.
 */
function convertCodeRaw<T>(requestParameters: ConvertCodeRequest, requestConfig: runtime.TypedQueryConfig<T, InlineResponse200> = {}): QueryConfig<T> {
    if (requestParameters.upcEanAsin === null || requestParameters.upcEanAsin === undefined) {
        throw new runtime.RequiredError('upcEanAsin','Required parameter requestParameters.upcEanAsin was null or undefined when calling convertCode.');
    }

    let queryParameters = null;


    const headerParameters = {};


    const { meta = {} } = requestConfig;

    const config: QueryConfig<T> = {
        url: `/api/v1/convert/{upc | ean | asin}`.replace(`{${"upc | ean | asin"}}`, encodeURIComponent(String(requestParameters.upcEanAsin))),
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(InlineResponse200FromJSON(body), text);
    }

    return config;
}

/**
* Returns the converted UPC, EAN, and ASIN codes.
* Convert between UPC, EAN, and ASIN product codes.
*/
export function convertCode<T>(requestParameters: ConvertCodeRequest, requestConfig?: runtime.TypedQueryConfig<T, InlineResponse200>): QueryConfig<T> {
    return convertCodeRaw(requestParameters, requestConfig);
}

