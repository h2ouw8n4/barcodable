/**
 * Barcodable.com API
 * Barcodable.com API
 *
 * OpenAPI spec version: 1.5.0
 * Contact: support@barcodable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/* tslint:disable:no-unused-variable member-ordering */

import { Observable } from "rxjs/Observable";
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/toPromise';
import IHttpClient from "../IHttpClient";
import { inject, injectable } from "inversify";
import { IAPIConfiguration } from "../IAPIConfiguration";
import { Headers } from "../Headers";
import HttpResponse from "../HttpResponse";

import { InlineResponse200 } from '../model/inlineResponse200';
import { InlineResponse400 } from '../model/inlineResponse400';

import { COLLECTION_FORMATS }  from '../variables';



@injectable()
export class ProductConversionService {
    private basePath: string = 'https://virtserver.swaggerhub.com/magicCashew/barcodable/1.0.0';

    constructor(@inject("IApiHttpClient") private httpClient: IHttpClient,
        @inject("IAPIConfiguration") private APIConfiguration: IAPIConfiguration ) {
        if(this.APIConfiguration.basePath)
            this.basePath = this.APIConfiguration.basePath;
    }

    /**
     * Convert between UPC, EAN, and ASIN product codes.
     * Returns the converted UPC, EAN, and ASIN codes.
     * @param upcEanAsin UPC, EAN, or ASIN
     
     */
    public convertCode(upcEanAsin: string, observe?: 'body', headers?: Headers): Observable<InlineResponse200>;
    public convertCode(upcEanAsin: string, observe?: 'response', headers?: Headers): Observable<HttpResponse<InlineResponse200>>;
    public convertCode(upcEanAsin: string, observe: any = 'body', headers: Headers = {}): Observable<any> {
        if (!upcEanAsin){
            throw new Error('Required parameter upcEanAsin was null or undefined when calling convertCode.');
        }

        headers['Accept'] = 'application/json';

        const response: Observable<HttpResponse<InlineResponse200>> = this.httpClient.get(`${this.basePath}/api/v1/convert/${encodeURIComponent(String(upcEanAsin))}`, headers);
        if (observe == 'body') {
               return response.map(httpResponse => <InlineResponse200>(httpResponse.response));
        }
        return response;
    }

}
