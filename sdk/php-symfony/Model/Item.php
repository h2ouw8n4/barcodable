<?php
/**
 * Item
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Barcodable.com API
 *
 * Barcodable.com API
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: support@barcodable.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the Item model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class Item 
{
        /**
     * @var string|null
     * @SerializedName("upc")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $upc;

    /**
     * @var string|null
     * @SerializedName("ean")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $ean;

    /**
     * @var string|null
     * @SerializedName("isbn")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $isbn;

    /**
     * @var string|null
     * @SerializedName("asin")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $asin;

    /**
     * @var string|null
     * @SerializedName("title")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $title;

    /**
     * @var string|null
     * @SerializedName("sku")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $sku;

    /**
     * @var string|null
     * @SerializedName("mpn")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $mpn;

    /**
     * @var string|null
     * @SerializedName("part_number")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $partNumber;

    /**
     * A list of matching upc codes.
     *
     * @var string[]|null
     * @SerializedName("upcs")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $upcs;

    /**
     * @var string|null
     * @SerializedName("description")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $description;

    /**
     * @var string|null
     * @SerializedName("brand")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $brand;

    /**
     * @var string|null
     * @SerializedName("manufacturer")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $manufacturer;

    /**
     * @var string|null
     * @SerializedName("color")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $color;

    /**
     * @var float|null
     * @SerializedName("new_price")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $newPrice;

    /**
     * @var float|null
     * @SerializedName("used_price")
     * @Assert\Type("float")
     * @Type("float")
     */
    protected $usedPrice;

    /**
     * @var string|null
     * @SerializedName("currency_code")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $currencyCode;

    /**
     * @var string|null
     * @SerializedName("url")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $url;

    /**
     * A list of product feature descriptions.
     *
     * @var string[]|null
     * @SerializedName("features")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $features;

    /**
     * Product dimensions and weight.  (&#39;meters&#39;, &#39;centimeters&#39;, &#39;millimeters&#39;, &#39;inches&#39;, &#39;feet&#39;, &#39;yards&#39;, &#39;ounces&#39;, &#39;pounds&#39;, &#39;grams&#39;, &#39;milligrams&#39;, &#39;kilograms&#39;)
     *
     * @var array[]|null
     * @SerializedName("dimensions")
     * @Assert\All({
     *   @Assert\Type("array")
     * })
     * @Type("array<array>")
     */
    protected $dimensions;

    /**
     * A list product images.
     *
     * @var string[]|null
     * @SerializedName("images")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $images;

    /**
     * Matched items for this product.
     *
     * @var array[]|null
     * @SerializedName("matched_items")
     * @Assert\All({
     *   @Assert\Type("array")
     * })
     * @Type("array<array>")
     */
    protected $matchedItems;

    /**
     * A list of country codes from which this item belongs.
     *
     * @var string[]|null
     * @SerializedName("iso_country_codes")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $isoCountryCodes;

    /**
     * The company name registered to the product&#39;s UPC or EAN.
     *
     * @var string|null
     * @SerializedName("company_name")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $companyName;

    /**
     * The company address registered to the product&#39;s UPC or EAN.
     *
     * @var string|null
     * @SerializedName("company_address")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $companyAddress;

    /**
     * A list of categories for this product.
     *
     * @var string[]|null
     * @SerializedName("categories")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $categories;

    /**
     * A list of category hierarchies for this product. Categories are listed in order of generic category to most specific category.
     *
     * @var string[]|null
     * @SerializedName("category_hierarchies")
     * @Assert\All({
     *   @Assert\Type("string")
     * })
     * @Type("array<string>")
     */
    protected $categoryHierarchies;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->upc = isset($data['upc']) ? $data['upc'] : null;
        $this->ean = isset($data['ean']) ? $data['ean'] : null;
        $this->isbn = isset($data['isbn']) ? $data['isbn'] : null;
        $this->asin = isset($data['asin']) ? $data['asin'] : null;
        $this->title = isset($data['title']) ? $data['title'] : null;
        $this->sku = isset($data['sku']) ? $data['sku'] : null;
        $this->mpn = isset($data['mpn']) ? $data['mpn'] : null;
        $this->partNumber = isset($data['partNumber']) ? $data['partNumber'] : null;
        $this->upcs = isset($data['upcs']) ? $data['upcs'] : null;
        $this->description = isset($data['description']) ? $data['description'] : null;
        $this->brand = isset($data['brand']) ? $data['brand'] : null;
        $this->manufacturer = isset($data['manufacturer']) ? $data['manufacturer'] : null;
        $this->color = isset($data['color']) ? $data['color'] : null;
        $this->newPrice = isset($data['newPrice']) ? $data['newPrice'] : null;
        $this->usedPrice = isset($data['usedPrice']) ? $data['usedPrice'] : null;
        $this->currencyCode = isset($data['currencyCode']) ? $data['currencyCode'] : null;
        $this->url = isset($data['url']) ? $data['url'] : null;
        $this->features = isset($data['features']) ? $data['features'] : null;
        $this->dimensions = isset($data['dimensions']) ? $data['dimensions'] : null;
        $this->images = isset($data['images']) ? $data['images'] : null;
        $this->matchedItems = isset($data['matchedItems']) ? $data['matchedItems'] : null;
        $this->isoCountryCodes = isset($data['isoCountryCodes']) ? $data['isoCountryCodes'] : null;
        $this->companyName = isset($data['companyName']) ? $data['companyName'] : null;
        $this->companyAddress = isset($data['companyAddress']) ? $data['companyAddress'] : null;
        $this->categories = isset($data['categories']) ? $data['categories'] : null;
        $this->categoryHierarchies = isset($data['categoryHierarchies']) ? $data['categoryHierarchies'] : null;
    }

    /**
     * Gets upc.
     *
     * @return string|null
     */
    public function getUpc()
    {
        return $this->upc;
    }

    /**
     * Sets upc.
     *
     * @param string|null $upc
     *
     * @return $this
     */
    public function setUpc($upc = null)
    {
        $this->upc = $upc;

        return $this;
    }

    /**
     * Gets ean.
     *
     * @return string|null
     */
    public function getEan()
    {
        return $this->ean;
    }

    /**
     * Sets ean.
     *
     * @param string|null $ean
     *
     * @return $this
     */
    public function setEan($ean = null)
    {
        $this->ean = $ean;

        return $this;
    }

    /**
     * Gets isbn.
     *
     * @return string|null
     */
    public function getIsbn()
    {
        return $this->isbn;
    }

    /**
     * Sets isbn.
     *
     * @param string|null $isbn
     *
     * @return $this
     */
    public function setIsbn($isbn = null)
    {
        $this->isbn = $isbn;

        return $this;
    }

    /**
     * Gets asin.
     *
     * @return string|null
     */
    public function getAsin()
    {
        return $this->asin;
    }

    /**
     * Sets asin.
     *
     * @param string|null $asin
     *
     * @return $this
     */
    public function setAsin($asin = null)
    {
        $this->asin = $asin;

        return $this;
    }

    /**
     * Gets title.
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Sets title.
     *
     * @param string|null $title
     *
     * @return $this
     */
    public function setTitle($title = null)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Gets sku.
     *
     * @return string|null
     */
    public function getSku()
    {
        return $this->sku;
    }

    /**
     * Sets sku.
     *
     * @param string|null $sku
     *
     * @return $this
     */
    public function setSku($sku = null)
    {
        $this->sku = $sku;

        return $this;
    }

    /**
     * Gets mpn.
     *
     * @return string|null
     */
    public function getMpn()
    {
        return $this->mpn;
    }

    /**
     * Sets mpn.
     *
     * @param string|null $mpn
     *
     * @return $this
     */
    public function setMpn($mpn = null)
    {
        $this->mpn = $mpn;

        return $this;
    }

    /**
     * Gets partNumber.
     *
     * @return string|null
     */
    public function getPartNumber()
    {
        return $this->partNumber;
    }

    /**
     * Sets partNumber.
     *
     * @param string|null $partNumber
     *
     * @return $this
     */
    public function setPartNumber($partNumber = null)
    {
        $this->partNumber = $partNumber;

        return $this;
    }

    /**
     * Gets upcs.
     *
     * @return string[]|null
     */
    public function getUpcs(): ?array
    {
        return $this->upcs;
    }

    /**
     * Sets upcs.
     *
     * @param string[]|null $upcs  A list of matching upc codes.
     *
     * @return $this
     */
    public function setUpcs(array $upcs = null): ?array
    {
        $this->upcs = $upcs;

        return $this;
    }

    /**
     * Gets description.
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Sets description.
     *
     * @param string|null $description
     *
     * @return $this
     */
    public function setDescription($description = null)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Gets brand.
     *
     * @return string|null
     */
    public function getBrand()
    {
        return $this->brand;
    }

    /**
     * Sets brand.
     *
     * @param string|null $brand
     *
     * @return $this
     */
    public function setBrand($brand = null)
    {
        $this->brand = $brand;

        return $this;
    }

    /**
     * Gets manufacturer.
     *
     * @return string|null
     */
    public function getManufacturer()
    {
        return $this->manufacturer;
    }

    /**
     * Sets manufacturer.
     *
     * @param string|null $manufacturer
     *
     * @return $this
     */
    public function setManufacturer($manufacturer = null)
    {
        $this->manufacturer = $manufacturer;

        return $this;
    }

    /**
     * Gets color.
     *
     * @return string|null
     */
    public function getColor()
    {
        return $this->color;
    }

    /**
     * Sets color.
     *
     * @param string|null $color
     *
     * @return $this
     */
    public function setColor($color = null)
    {
        $this->color = $color;

        return $this;
    }

    /**
     * Gets newPrice.
     *
     * @return float|null
     */
    public function getNewPrice()
    {
        return $this->newPrice;
    }

    /**
     * Sets newPrice.
     *
     * @param float|null $newPrice
     *
     * @return $this
     */
    public function setNewPrice($newPrice = null)
    {
        $this->newPrice = $newPrice;

        return $this;
    }

    /**
     * Gets usedPrice.
     *
     * @return float|null
     */
    public function getUsedPrice()
    {
        return $this->usedPrice;
    }

    /**
     * Sets usedPrice.
     *
     * @param float|null $usedPrice
     *
     * @return $this
     */
    public function setUsedPrice($usedPrice = null)
    {
        $this->usedPrice = $usedPrice;

        return $this;
    }

    /**
     * Gets currencyCode.
     *
     * @return string|null
     */
    public function getCurrencyCode()
    {
        return $this->currencyCode;
    }

    /**
     * Sets currencyCode.
     *
     * @param string|null $currencyCode
     *
     * @return $this
     */
    public function setCurrencyCode($currencyCode = null)
    {
        $this->currencyCode = $currencyCode;

        return $this;
    }

    /**
     * Gets url.
     *
     * @return string|null
     */
    public function getUrl()
    {
        return $this->url;
    }

    /**
     * Sets url.
     *
     * @param string|null $url
     *
     * @return $this
     */
    public function setUrl($url = null)
    {
        $this->url = $url;

        return $this;
    }

    /**
     * Gets features.
     *
     * @return string[]|null
     */
    public function getFeatures(): ?array
    {
        return $this->features;
    }

    /**
     * Sets features.
     *
     * @param string[]|null $features  A list of product feature descriptions.
     *
     * @return $this
     */
    public function setFeatures(array $features = null): ?array
    {
        $this->features = $features;

        return $this;
    }

    /**
     * Gets dimensions.
     *
     * @return array[]|null
     */
    public function getDimensions(): ?array
    {
        return $this->dimensions;
    }

    /**
     * Sets dimensions.
     *
     * @param array[]|null $dimensions  Product dimensions and weight.  ('meters', 'centimeters', 'millimeters', 'inches', 'feet', 'yards', 'ounces', 'pounds', 'grams', 'milligrams', 'kilograms')
     *
     * @return $this
     */
    public function setDimensions(array $dimensions = null): ?array
    {
        $this->dimensions = $dimensions;

        return $this;
    }

    /**
     * Gets images.
     *
     * @return string[]|null
     */
    public function getImages(): ?array
    {
        return $this->images;
    }

    /**
     * Sets images.
     *
     * @param string[]|null $images  A list product images.
     *
     * @return $this
     */
    public function setImages(array $images = null): ?array
    {
        $this->images = $images;

        return $this;
    }

    /**
     * Gets matchedItems.
     *
     * @return array[]|null
     */
    public function getMatchedItems(): ?array
    {
        return $this->matchedItems;
    }

    /**
     * Sets matchedItems.
     *
     * @param array[]|null $matchedItems  Matched items for this product.
     *
     * @return $this
     */
    public function setMatchedItems(array $matchedItems = null): ?array
    {
        $this->matchedItems = $matchedItems;

        return $this;
    }

    /**
     * Gets isoCountryCodes.
     *
     * @return string[]|null
     */
    public function getIsoCountryCodes(): ?array
    {
        return $this->isoCountryCodes;
    }

    /**
     * Sets isoCountryCodes.
     *
     * @param string[]|null $isoCountryCodes  A list of country codes from which this item belongs.
     *
     * @return $this
     */
    public function setIsoCountryCodes(array $isoCountryCodes = null): ?array
    {
        $this->isoCountryCodes = $isoCountryCodes;

        return $this;
    }

    /**
     * Gets companyName.
     *
     * @return string|null
     */
    public function getCompanyName()
    {
        return $this->companyName;
    }

    /**
     * Sets companyName.
     *
     * @param string|null $companyName  The company name registered to the product's UPC or EAN.
     *
     * @return $this
     */
    public function setCompanyName($companyName = null)
    {
        $this->companyName = $companyName;

        return $this;
    }

    /**
     * Gets companyAddress.
     *
     * @return string|null
     */
    public function getCompanyAddress()
    {
        return $this->companyAddress;
    }

    /**
     * Sets companyAddress.
     *
     * @param string|null $companyAddress  The company address registered to the product's UPC or EAN.
     *
     * @return $this
     */
    public function setCompanyAddress($companyAddress = null)
    {
        $this->companyAddress = $companyAddress;

        return $this;
    }

    /**
     * Gets categories.
     *
     * @return string[]|null
     */
    public function getCategories(): ?array
    {
        return $this->categories;
    }

    /**
     * Sets categories.
     *
     * @param string[]|null $categories  A list of categories for this product.
     *
     * @return $this
     */
    public function setCategories(array $categories = null): ?array
    {
        $this->categories = $categories;

        return $this;
    }

    /**
     * Gets categoryHierarchies.
     *
     * @return string[]|null
     */
    public function getCategoryHierarchies(): ?array
    {
        return $this->categoryHierarchies;
    }

    /**
     * Sets categoryHierarchies.
     *
     * @param string[]|null $categoryHierarchies  A list of category hierarchies for this product. Categories are listed in order of generic category to most specific category.
     *
     * @return $this
     */
    public function setCategoryHierarchies(array $categoryHierarchies = null): ?array
    {
        $this->categoryHierarchies = $categoryHierarchies;

        return $this;
    }
}


