/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.ProductConversionApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * Barcodable.com API
 * Version: 1.5.0
 * Generated by: org.openapitools.codegen.languages.JavascriptClosureAngularClientCodegen
 */
/**
 * @license Apache 2.0
 * http://www.apache.org/licenses/LICENSE-2.0.html
 */

goog.provide('API.Client.ProductConversionApi');

goog.require('API.Client.inline_response_200');
goog.require('API.Client.inline_response_400');

/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.ProductConversionApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('ProductConversionApiBasePath') ?
                   /** @type {!string} */ ($injector.get('ProductConversionApiBasePath')) :
                   'https://virtserver.swaggerhub.com/mindviser/barcodable/1.0.0';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('ProductConversionApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('ProductConversionApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.ProductConversionApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Convert between UPC, EAN, and ASIN product codes.
 * Returns the converted UPC, EAN, and ASIN codes.
 * @param {!string} upcEanAsin UPC, EAN, or ASIN
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!API.Client.inline_response_200>}
 */
API.Client.ProductConversionApi.prototype.convertCode = function(upcEanAsin, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/api/v1/convert/{upc | ean | asin}'
      .replace('{' + 'upc | ean | asin' + '}', String(upcEanAsin));

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  // verify required parameter 'upcEanAsin' is set
  if (!upcEanAsin) {
    throw new Error('Missing required parameter upcEanAsin when calling convertCode');
  }
  /** @type {!Object} */
  var httpRequestParams = {
    method: 'GET',
    url: path,
    json: true,
            params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
