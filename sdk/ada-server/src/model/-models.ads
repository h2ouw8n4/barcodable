--  Barcodable.com API
--  Barcodable.com API
--
--  OpenAPI spec version: 1.5.0
--  Contact: support@barcodable.com
--
--  NOTE: This package is auto generated by the swagger code generator 4.0.0-beta2.
--  https://openapi-generator.tech
--  Do not edit the class manually.
with Swagger.Streams;
with Ada.Containers.Vectors;
package .Models is



   type InlineResponse400Type is
     record
       Message : Swagger.UString;
       Status : Integer;
     end record;

   package InlineResponse400Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => InlineResponse400Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineResponse400Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineResponse400Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InlineResponse400Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InlineResponse400Type_Vectors.Vector);




   type InvalidCodeType is
     record
       Message : Swagger.UString;
       Status : Integer;
     end record;

   package InvalidCodeType_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => InvalidCodeType);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InvalidCodeType);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InvalidCodeType_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InvalidCodeType);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InvalidCodeType_Vectors.Vector);




   type NotFoundType is
     record
       Message : Swagger.UString;
       Status : Integer;
     end record;

   package NotFoundType_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => NotFoundType);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in NotFoundType);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in NotFoundType_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out NotFoundType);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out NotFoundType_Vectors.Vector);




   type InlineResponse200Type is
     record
       Upcs : Swagger.UString_Vectors.Vector;
       Eans : Swagger.UString_Vectors.Vector;
       Asins : Swagger.UString_Vectors.Vector;
       Message : Swagger.UString;
     end record;

   package InlineResponse200Type_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => InlineResponse200Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineResponse200Type);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in InlineResponse200Type_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InlineResponse200Type);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out InlineResponse200Type_Vectors.Vector);




   type ItemType is
     record
       Upc : Swagger.UString;
       Ean : Swagger.UString;
       Isbn : Swagger.UString;
       Asin : Swagger.UString;
       Title : Swagger.UString;
       Sku : Swagger.UString;
       Mpn : Swagger.UString;
       Part_Number : Swagger.UString;
       Upcs : Swagger.UString_Vectors.Vector;
       Description : Swagger.UString;
       Brand : Swagger.UString;
       Manufacturer : Swagger.UString;
       Color : Swagger.UString;
       New_Price : Swagger.Number;
       Used_Price : Swagger.Number;
       Currency_Code : Swagger.UString;
       Url : Swagger.UString;
       Features : Swagger.UString_Vectors.Vector;
       Dimensions : Swagger.Object_Vectors.Vector;
       Images : Swagger.UString_Vectors.Vector;
       Matched_Items : Swagger.Object_Vectors.Vector;
       Iso_Country_Codes : Swagger.UString_Vectors.Vector;
       Company_Name : Swagger.UString;
       Company_Address : Swagger.UString;
       Categories : Swagger.UString_Vectors.Vector;
       Category_Hierarchies : Swagger.UString_Vectors.Vector;
     end record;

   package ItemType_Vectors is
      new Ada.Containers.Vectors (Index_Type   => Positive,
                                  Element_Type => ItemType);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemType);

   procedure Serialize (Into  : in out Swagger.Streams.Output_Stream'Class;
                        Name  : in String;
                        Value : in ItemType_Vectors.Vector);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ItemType);

   procedure Deserialize (From  : in Swagger.Value_Type;
                          Name  : in String;
                          Value : out ItemType_Vectors.Vector);



end .Models;
