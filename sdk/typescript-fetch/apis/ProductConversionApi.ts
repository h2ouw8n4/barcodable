// tslint:disable
/**
 * Barcodable.com API
 * Barcodable.com API
 *
 * OpenAPI spec version: 1.5.0
 * Contact: support@barcodable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InlineResponse200,
    InlineResponse200FromJSON,
    InlineResponse200ToJSON,
    InlineResponse400,
    InlineResponse400FromJSON,
    InlineResponse400ToJSON,
} from '../models';

export interface ConvertCodeRequest {
    upcEanAsin: string;
}

/**
 * no description
 */
export class ProductConversionApi extends runtime.BaseAPI {

    /**
     * Returns the converted UPC, EAN, and ASIN codes.
     * Convert between UPC, EAN, and ASIN product codes.
     */
    async convertCodeRaw(requestParameters: ConvertCodeRequest): Promise<runtime.ApiResponse<InlineResponse200>> {
        if (requestParameters.upcEanAsin === null || requestParameters.upcEanAsin === undefined) {
            throw new runtime.RequiredError('upcEanAsin','Required parameter requestParameters.upcEanAsin was null or undefined when calling convertCode.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/convert/{upc | ean | asin}`.replace(`{${"upc | ean | asin"}}`, encodeURIComponent(String(requestParameters.upcEanAsin))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse200FromJSON(jsonValue));
    }

    /**
     * Returns the converted UPC, EAN, and ASIN codes.
     * Convert between UPC, EAN, and ASIN product codes.
     */
    async convertCode(requestParameters: ConvertCodeRequest): Promise<InlineResponse200> {
        const response = await this.convertCodeRaw(requestParameters);
        return await response.value();
    }

}
