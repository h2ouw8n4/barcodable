/**
 * Barcodable.com API
 * Barcodable.com API
 *
 * OpenAPI spec version: 1.5.0
 * Contact: support@barcodable.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include <QJsonArray>
#include <QJsonDocument>
#include <QJsonObject>
#include <QVariantMap>


#include "OAIApiRouter.h"
#include "OAIProductConversionApiRequest.h"
#include "OAIProductLookupApiRequest.h"


namespace OpenAPI {

OAIApiRouter::OAIApiRouter() {
    createApiHandlers();
}

OAIApiRouter::~OAIApiRouter(){
    
    delete OAIProductConversionApiApiHandler;
    delete OAIProductLookupApiApiHandler;
}

void OAIApiRouter::createApiHandlers() { 
    OAIProductConversionApiApiHandler = new OAIProductConversionApiHandler();
    OAIProductLookupApiApiHandler = new OAIProductLookupApiHandler();
}

void OAIApiRouter::setUpRoutes() {
    
}

void OAIApiRouter::processRequest(QHttpEngine::Socket *socket){
    if( handleRequest(socket) ){
        return;
    }
    if( handleRequestAndExtractPathParam(socket) ){
        return;
    }
    socket->setStatusCode(QHttpEngine::Socket::NotFound);
    if(socket->isOpen()){
        socket->writeHeaders();
        socket->close();
    }
}

bool OAIApiRouter::handleRequest(QHttpEngine::Socket *socket){
    auto reqPath = QString("%1 %2").arg(fromQHttpEngineMethod(socket->method())).arg(socket->path()).toLower();
    if ( Routes.contains(reqPath) ) {
        Routes.value(reqPath).operator()(socket);
        return true;
    }
    return false;
}

bool OAIApiRouter::handleRequestAndExtractPathParam(QHttpEngine::Socket *socket){
    auto reqPath = QString("%1 %2").arg(fromQHttpEngineMethod(socket->method())).arg(socket->path()).toLower();
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/magicCashew/barcodable/1.0.0/api/v1/convert/{upc | ean | asin}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString upc | ean | asin = match.captured(QString("upc | ean | asin").toLower());
                auto reqObj = new OAIProductConversionApiRequest(socket, OAIProductConversionApiApiHandler);
                reqObj->convertCodeRequest(upc | ean | asin);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/magicCashew/barcodable/1.0.0/api/v1/asin/{asin}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString asin = match.captured(QString("asin").toLower());
                auto reqObj = new OAIProductLookupApiRequest(socket, OAIProductLookupApiApiHandler);
                reqObj->getItemByASINRequest(asin);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/magicCashew/barcodable/1.0.0/api/v1/ean/{ean}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString ean = match.captured(QString("ean").toLower());
                auto reqObj = new OAIProductLookupApiRequest(socket, OAIProductLookupApiApiHandler);
                reqObj->getItemByEANRequest(ean);
                return true;
            }
        }
    }
    {
        auto completePath = QString("%1 %2").arg("GET").arg("/magicCashew/barcodable/1.0.0/api/v1/upc/{upc}").toLower();
        if ( reqPath.startsWith(completePath.leftRef( completePath.indexOf(QString("/{")))) ) {
            QRegularExpressionMatch match = getRequestMatch( completePath, reqPath );
            if ( match.hasMatch() ){
                QString upc = match.captured(QString("upc").toLower());
                auto reqObj = new OAIProductLookupApiRequest(socket, OAIProductLookupApiApiHandler);
                reqObj->getItemByUPCRequest(upc);
                return true;
            }
        }
    }
    return false;
}

}
